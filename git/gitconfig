[alias]
	cp = cherry-pick
	p = push
	pf = pushf
	pushf = push --force-with-lease
	s = status
	rb = rebase
	rbc = rebase --continue
	rbs = rebase --skip
	rba = rebase --abort
	oops = commit --amend --no-edit
	superoops = !git add -A && git oops && git pushf
	normalize = add --renormalize
	fix-working-tree = !git rm --cached -r . && git reset --hard
	fixauthor = commit --amend --reset-author --no-edit
	rerun-ci = !git commit -m \"Rerun CI\" --allow-empty && git push
	work = config user.email \"jop@moviestarplanet.com\"
	home = config user.email \"me@jetersen.dev\"
	lg = log --graph --pretty=format:'%C(magenta)%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
	new = lg main..HEAD
	missing = lg HEAD..main
	change-remote-to-ssh = !git remote set-url origin $(git remote get-url origin | sed "s#https://github.com/#git@github.com:#")
[help]
	autocorrect = 1
[core]
	autocrlf = input
	excludesfile = ~/.gitignore.global
	editor = code --wait
	pager = delta
[init]
	defaultBranch = main
[interactive]
	diffFilter = delta --color-only
[delta]
	navigate = true
	light = false
[merge]
	conflictStyle = diff3
[diff]
	colorMoved = default
[gpg]
	format = ssh
[commit]
	gpgsign = true
[tag]
	gpgsign = true
	forceSignAnnotated = true
[pull]
	rebase = true
[push]
	default = simple
	followTags = true
	autoSetupRemote = true
[fetch]
	prune = true
[rebase]
	autosquash = true
	autoStash = true
[remote "origin"]
	fetch = +refs/pr/*/head:refs/remotes/origin/pr/*
[include]
	path = .gitconfig.local
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
[user]
	name = Joseph Petersen
	signingKey = ~/.ssh/id_ed25519.pub
	email = me@jetersen.dev
[diff "sopsdiffer"]
	textconv = sops -d
[includeIf "gitdir:~/git/work/"]
	path = .gitconfig.work
[includeIf "gitdir:~/git/code/"]
	path = .gitconfig.home
[includeIf "gitdir/i:C:/git/work/"]
	path = .gitconfig.work
[includeIf "gitdir/i:C:/git/code/"]
	path = .gitconfig.home
[includeIf "gitdir/i:D:/git/work/"]
	path = .gitconfig.work
[includeIf "gitdir/i:D:/git/code/"]
	path = .gitconfig.home
[includeIf "gitdir/i:/workspaces/"]
	path = .gitconfig.codespaces
[credential "https://github.com"]
	helper = !gh auth git-credential
[credential "https://gist.github.com"]
	helper = !gh auth git-credential
